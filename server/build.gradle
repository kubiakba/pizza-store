buildscript {
    ext.spring = '2.0.2.RELEASE'
    ext.gradleDocker = '1.2'
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "se.transmode.gradle:gradle-docker:$gradleDocker"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring"
    }
}

plugins {
    id "org.sonarqube" version "2.6.2"
}

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'groovy'
apply plugin: 'org.springframework.boot'
apply plugin: 'docker'
apply plugin: 'jacoco'

dependencies {

    // spring
    compile "org.springframework.boot:spring-boot-starter-webflux:${spring}"
    compile "org.springframework.boot:spring-boot-starter-data-mongodb-reactive:${spring}"
    compile "org.springframework.boot:spring-boot-starter-security:${spring}"
    testCompile "org.springframework.security:spring-security-test:${springSecurityTest}"
    testCompile "org.springframework.boot:spring-boot-starter-test:${spring}"

    // utils
    testCompile "org.assertj:assertj-core:${assertJ}"
    compile "com.google.guava:guava:${guava}"
    compile "io.projectreactor:reactor-core:${reactor}"
    compile "io.reactivex.rxjava2:rxjava:${rxjava}"
    compile "commons-lang:commons-lang:${commonsLang}"
    compile "commons-validator:commons-validator:${commonsLangValidator}"
    compileOnly "org.projectlombok:lombok:${lombok}"

    // embedded mongo for tests
    testCompile "de.flapdoodle.embed:de.flapdoodle.embed.mongo:${embeddedMongo}"

    // spock
    compile "org.codehaus.groovy:groovy-all:${groovy}"
    testCompile "org.spockframework:spock-core:${spockCore}"
    testCompile "org.spockframework:spock-spring:${spockSpring}"
}

repositories {
    mavenCentral()
    jcenter()
}

mainClassName = 'pl.bk.pizza.store.Initializer'

bootJar {
    baseName = 'pizza-store'
    version = '1.0'
}

task buildDocker(type: Docker, dependsOn: build) {
    baseImage = 'frolvlad/alpine-oraclejdk8:slim'
    applicationName = jar.baseName
    addFile {
        from bootJar
        rename { 'app.jar' }
    }
    exposePort(8081)
    entryPoint(['java', '-Dspring.profiles.active=docker', '-jar', '/app.jar'])
}

sourceCompatibility = 1.8

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}

task stage(dependsOn: ['build', 'clean'])
build.mustRunAfter clean

check.dependsOn jacocoTestReport
